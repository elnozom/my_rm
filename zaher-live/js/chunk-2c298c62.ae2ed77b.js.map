{"version":3,"sources":["webpack:///../../../src/components/VTextField/index.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///../../../src/components/VForm/VForm.ts","webpack:///./src/views/items/edit.vue?4789","webpack:///./src/repositores/group.ts","webpack:///./src/repositores/file.ts","webpack:///src/views/items/edit.vue","webpack:///./src/views/items/edit.vue?02af","webpack:///../../../src/components/VFileInput/VFileInput.ts","webpack:///./src/views/items/edit.vue"],"names":["defaultMenuProps","offsetY","offsetOverflow","transition","VSelect","name","props","allowOverflow","type","default","autoSelectFirst","filter","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","String","data","lazySearch","this","computed","classes","selectedIndex","computedItems","selectedValues","selectedItems","map","item","hasDisplayedItems","hideSelected","filteredItems","some","length","currentRange","selectedItem","getText","internalSearch","allItems","value","text","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","find","i","listData","items","watch","internalValue","isFocused","document","$refs","input","isMenuActive","val","oldVal","activateMenu","created","destroyed","methods","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","clearableCallback","genInput","VTextField","mergeData","attrs","autocomplete","domProps","genInputSlot","slot","genSelections","hasSlot","onClick","isAppendInner","e","onInput","target","onKeyDown","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","event","delimiters","returnObject","editingIndex","computedCounterValue","$slots","delimiter","d","genChipSelection","chip","dblclick","onChipInput","onEnterDown","getMenuIndex","selectionStart","toLocaleLowerCase","includes","setValue","updateEditing","index","findIndex","Object","updateCombobox","isUsingSlot","Boolean","$scopedSlots","updateTags","menuIndex","itemToSelect","onPaste","pastedItemText","findExistingIndex","provide","form","inheritAttrs","disabled","lazyValidation","readonly","inputs","watchers","errorBag","handler","errors","deep","immediate","watchInput","watcher","_uid","valid","shouldValidate","validate","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","unwatch","render","h","staticClass","novalidate","attrs$","on","submit","_vm","_h","$createElement","_c","_self","_v","_s","$t","ref","model","callback","$$v","expression","mainGroup","required","loading","mainGroupChanged","$set","subGroup","subGroupChanged","productHint","product","productChanged","imageLoading","imageDisabled","upload","file","$event","preventDefault","apply","arguments","staticRenderFns","Http","Api","getInstance","ListMainGroups","Promise","resolve","reject","then","catch","ListProducts","main","sub","ListSubGroups","id","UpdateImage","payload","put","Upload","post","headers","getMainGroups","console","log","mainGroupCode","subGroupCode","productCode","image","getSubGroups","getProducts","GroupCode","prop","chips","clearable","counterSizeString","counterString","hideInput","placeholder","prependIcon","showSize","validator","v","smallChips","truncateLength","Number","fileCount","lazyValue","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","base","isLabelActive","persistentPlaceholder","truncatedText","hasChips","genChips","small","genControl","display","genPrependSlot","icon","genIcon","genSlot","genSelectionText","children","class","selection","genTextFieldSlot","node","click","files","truncateText","str","charsKeepOneSide","Math","component","VBtn","VCard","VCardText","VCardTitle","VCol","VCombobox","VContainer","VFileInput","VForm","VRow"],"mappings":"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","file":"js/chunk-2c298c62.ae2ed77b.js","sourcesContent":["import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      if (!this.autoSelectFirst) return\n\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n\n        // if selected item contains search value,\n        // remove the search string\n        if (\n          this.internalSearch &&\n          this.multiple &&\n          this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())\n        ) {\n          this.internalSearch = null\n        }\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value ?? this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      const index = this.selectedItems.findIndex(item =>\n        this.getText(item) === this.internalSearch)\n\n      // If user enters a duplicate text on chip edit,\n      // don't add it, move it to the end of the list\n      if (index > -1) {\n        const item = typeof value[index] === 'object'\n          ? Object.assign({}, value[index])\n          : value[index]\n\n        value.splice(index, 1)\n        value.push(item)\n      } else {\n        value[this.editingIndex] = this.internalSearch\n      }\n\n      this.setValue(value)\n      this.editingIndex = -1\n      this.internalSearch = null\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = null\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n      if ((menuIndex < 0 && !this.searchIsDirty) ||\n          !this.internalSearch) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.findIndex(item =>\n        this.internalSearch === this.getText(item))\n\n      // If the duplicate item is an object,\n      // copy it, so that it can be added again later\n      const itemToSelect = index > -1 && typeof this.selectedItems[index] === 'object'\n        ? Object.assign({}, this.selectedItems[index])\n        : this.internalSearch\n\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(itemToSelect)\n\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n    clearableCallback () {\n      this.editingIndex = -1\n\n      VAutocomplete.options.methods.clearableCallback.call(this)\n    },\n  },\n})\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-card',[_c('v-card-title',[_c('h3',[_vm._v(_vm._s(_vm.$t('edit_item_image')))])]),_c('v-card-text',[_c('v-form',{ref:\"form\",staticClass:\"py-8\",attrs:{\"lazy-validation\":\"\"},model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:\"valid\"}},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_c('v-combobox',{attrs:{\"items\":_vm.mainGroup.items,\"item-text\":\"GroupName\",\"outlined\":\"\",\"rules\":[_vm.required],\"loading\":_vm.mainGroup.loading,\"label\":\"المجموعة الرئيسية\",\"required\":\"\"},on:{\"change\":_vm.mainGroupChanged},model:{value:(_vm.form.mainGroup),callback:function ($$v) {_vm.$set(_vm.form, \"mainGroup\", $$v)},expression:\"form.mainGroup\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_c('v-combobox',{attrs:{\"items\":_vm.subGroup.items,\"item-text\":\"GroupName\",\"loading\":_vm.subGroup.loading,\"outlined\":\"\",\"rules\":[_vm.required],\"label\":\"المجموعة الفرعية\",\"required\":\"\"},on:{\"change\":_vm.subGroupChanged},model:{value:(_vm.form.subGroup),callback:function ($$v) {_vm.$set(_vm.form, \"subGroup\", $$v)},expression:\"form.subGroup\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-combobox',{attrs:{\"messages\":[_vm.productHint],\"items\":_vm.product.items,\"item-text\":\"ItemName\",\"clearable\":\"\",\"outlined\":\"\",\"loading\":_vm.product.loading,\"label\":\"المنتج\",\"required\":\"\"},on:{\"change\":_vm.productChanged},model:{value:(_vm.form.product),callback:function ($$v) {_vm.$set(_vm.form, \"product\", $$v)},expression:\"form.product\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-file-input',{attrs:{\"accept\":\"image/*\",\"rules\":[_vm.required],\"loading\":_vm.imageLoading,\"disabled\":_vm.imageDisabled,\"label\":\"الصورة\",\"outlined\":\"\"},on:{\"change\":_vm.upload},model:{value:(_vm.file),callback:function ($$v) {_vm.file=$$v},expression:\"file\"}})],1),_c('v-col',{attrs:{\"md\":\"12\"}},[_c('v-btn',{attrs:{\"color\":\"app-btn\",\"disabled\":!_vm.valid,\"loading\":_vm.loading},on:{\"click\":function($event){$event.preventDefault();return _vm.submit.apply(null, arguments)}}},[_vm._v(\" تاكيد \")])],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import {  groupsHierarchyResponse} from '@/models/group';\nimport { mainGroupResponse , subGroupResponse , productResponse } from '@/models/groupCodeModel';\nimport Api from '@/utils/axios/Api';\nconst Http = Api.getInstance();\n\n\nexport const ListHierarchy = () :Promise<groupsHierarchyResponse[]> => {\n    return new Promise((resolve, reject) => {\n        Http.get(`group/hierarchy?lang=${localStorage.getItem(\"locale\")}`)\n        .then((d:any) => {\n            resolve(d)\n        }).catch((e:any) => {\n            reject(e)\n        })\n    })\n}\n\n\nexport const ListMainGroups = () :Promise<mainGroupResponse[]> => {\n    return new Promise((resolve, reject) => {\n        Http.get(`group`)\n        .then((d:any) => {\n            resolve(d)\n        }).catch((e:any) => {\n            reject(e)\n        })\n    })\n}\nexport const ListProducts =  (main:number, sub:number) :Promise<productResponse[]> => {\n    return new Promise((resolve, reject) => {\n        Http.get(`item/${sub}/${main}`)\n        .then((d:any) => {\n            resolve(d)\n        }).catch((e:any) => {\n            reject(e)\n        })\n    })\n}\n\nexport const ListSubGroups = (id:number) :Promise<subGroupResponse[]> => {\n    return new Promise((resolve, reject) => {\n        Http.get(`group/${id}`)\n        .then((d:any) => {\n            resolve(d)\n        }).catch((e:any) => {\n            reject(e)\n        })\n    })\n}\n\n\n\nexport const UpdateImage = (payload : object) :Promise<boolean> => {\n    return new Promise((resolve, reject) => {\n        Http.put(`item/image` , payload)\n        .then((d:any) => {\n            resolve(d)\n        }).catch((e:any) => {\n            reject(e)\n        })\n    })\n}","\nimport Api from '@/utils/axios/Api';\nconst Http = Api.getInstance();\nexport const Upload = (payload:Object) => {\n    return new Promise((resolve, reject) => {\n        Http.post('upload' , payload , {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n          })\n        .then((d:any) => {\n            resolve(d)\n        }).catch((e:any) => {\n            reject(e)\n        })\n    })\n}","<template>\n  <v-container>\n    <v-card>\n      <v-card-title>\n        <h3>{{$t('edit_item_image')}}</h3>\n      </v-card-title>\n      <v-card-text>\n        <v-form class=\"py-8\" ref=\"form\" v-model=\"valid\" lazy-validation>\n          <v-row>\n            <v-col cols=\"12\" md=\"6\">\n              <v-combobox\n                v-model=\"form.mainGroup\"\n                :items=\"mainGroup.items\"\n                item-text=\"GroupName\"\n                outlined\n                :rules=\"[required]\"\n                :loading=\"mainGroup.loading\"\n                @change=\"mainGroupChanged\"\n                label=\"المجموعة الرئيسية\"\n                required\n              ></v-combobox>\n            </v-col>\n            <v-col cols=\"12\" md=\"6\">\n              <v-combobox\n                v-model=\"form.subGroup\"\n                :items=\"subGroup.items\"\n                item-text=\"GroupName\"\n\n                :loading=\"subGroup.loading\"\n                outlined\n                :rules=\"[required]\"\n                @change=\"subGroupChanged\"\n                label=\"المجموعة الفرعية\"\n                required\n              ></v-combobox>\n            </v-col>\n            <v-col cols=\"12\" >\n              <v-combobox\n                v-model=\"form.product\"\n                :messages=\"[productHint]\"\n                :items=\"product.items\"\n                item-text=\"ItemName\"\n                clearable\n                outlined\n                :loading=\"product.loading\"\n      \n                @change=\"productChanged\"\n                label=\"المنتج\"\n                required\n              ></v-combobox>\n            </v-col>\n            <v-col cols=\"12\">\n              <v-file-input\n                accept=\"image/*\"\n                @change=\"upload\"\n                :rules=\"[required]\"\n                v-model=\"file\"\n                :loading=\"imageLoading\"\n                :disabled=\"imageDisabled\"\n                label=\"الصورة\"\n                outlined\n              ></v-file-input>\n            </v-col>\n            <v-col md=\"12\">\n              <v-btn color=\"app-btn\" :disabled=\"!valid\" :loading=\"loading\" @click.prevent=\"submit\"> تاكيد </v-btn>\n            </v-col>\n          </v-row>\n        </v-form>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n<script>\nimport { ListMainGroups,UpdateImage, ListSubGroups , ListProducts } from \"@/repositores/group\";\nimport { Upload } from \"@/repositores/file.ts\";\nimport { required , removeBasePathFromImage} from \"@/utils/helpers\";\n// import {openSnack} from '@/utils/snack/snack'\nexport default {\n  data: () => ({\n    path : '',\n    loading : false,\n    imageLoading: false,\n    imageDisabled : true,\n    file: null,\n    mainGroup: {\n      items: [],\n      loading: false,\n    },\n    valid: false,\n    subGroup: {\n      items: [],\n      loading: false,\n    },\n    productHint:\"اذا قمت باختيار منتج سيتم تعديل الصورة الخاصة بالمنتج  اذا تركت هذا الحقل خالي سيتم تحديث صورة المجموعة الفرعية\",\n    imageHint:\"\",\n    product: {\n      items: [],\n      loading: false,\n    },\n    form: {},\n    image: null,\n  }),\n  created() {\n    this.getMainGroups();\n  },\n  methods: {\n    required,\n    validate() {\n      return this.$refs.form.validate();\n    },\n    productChanged(val) {\n      console.log(val);\n      \n    },\n    submit(){\n      // UpdateImage()\n      let isValid = this.validate()\n      if(!isValid)  return\n      this.loading = true\n      const form = {\n        mainGroupCode : this.form.mainGroup.GroupCode,\n        subGroupCode : this.form.subGroup.GroupCode,\n        productCode : typeof this.form.product == 'undefined' || this.form.product == null  ? 0 : this.form.product.ItemCode,\n        image : this.form.image\n      }\n      UpdateImage(form).then(res => {\n        this.reset()\n        // openSnack(\"success\" , \"updated\" , \"success\")\n        this.loading = false\n      }).catch(e => {\n        console.log(e)\n        this.reset()\n        // openSnack(\"failed\" , \"update failed\" , \"failed\")\n        this.loading = false\n\n      })\n      \n    },\n    upload(value){\n      if(file == null) return\n      this.imageLoading = true\n       let formData = new FormData();\n        formData.append(\"file\", this.file);\n        Upload(formData).then((d) => {\n          this.removeImage = false\n          this.imageLoading = false\n          const value = removeBasePathFromImage(d)\n          this.form.image = value\n        });\n    },\n    mainGroupChanged(val) {\n      console.log(val);\n      this.form.subGroup = null;\n      this.form.product = null;\n      this.getSubGroups();\n    },\n    subGroupChanged(val) {\n      console.log(val);\n      this.imageDisabled = false\n      this.form.product = null;\n      this.getProducts()\n    },\n    getMainGroups() {\n      this.mainGroup.loading = true;\n      ListMainGroups().then((res) => {\n        this.mainGroup.items = res;\n        this.mainGroup.loading = false;\n      });\n    },\n    getSubGroups() {\n      this.subGroup.loading = true;\n      ListSubGroups(this.form.mainGroup.GroupCode).then((res) => {\n        this.subGroup.items = res;\n        this.subGroup.loading = false;\n      });\n    },\n    getProducts() {\n      this.product.loading = true;\n      ListProducts(this.form.mainGroup.GroupCode , this.form.subGroup.GroupCode).then((res) => {\n        this.product.items = res;\n        this.product.loading = false;\n      });\n    },\n    reset() {\n      this.imageDisabled = true\n      this.$refs.form.reset();\n    },\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n  },\n};\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport { mergeStyles } from '../../util/mergeData'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    hideInput: Boolean,\n    multiple: Boolean,\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.multiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    text (): string[] {\n      if (!this.isDirty && (this.persistentPlaceholder || this.isFocused || !this.hasLabel)) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.multiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.multiple ? [] : null\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genControl () {\n      const render = VTextField.options.methods.genControl.call(this)\n\n      if (this.hideInput) {\n        render.data!.style = mergeStyles(\n          render.data!.style,\n          { display: 'none' }\n        )\n      }\n\n      return render\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data!.attrs!.multiple = this.multiple\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.multiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=1577209e&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VCombobox } from 'vuetify/lib/components/VCombobox';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VFileInput } from 'vuetify/lib/components/VFileInput';\nimport { VForm } from 'vuetify/lib/components/VForm';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCard,VCardText,VCardTitle,VCol,VCombobox,VContainer,VFileInput,VForm,VRow})\n"],"sourceRoot":""}